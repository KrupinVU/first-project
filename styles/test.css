@font-face {
  font-family: "Roboto";
  src: "../fonts/Roboto-Regular.ttf";
  font-weight: normal;
}

@font-face {
  font-family: "Roboto";
  src: "../fonts/Roboto-Medium.ttf";
  font-weight: medium;
}

@font-face {
  font-family: "Roboto";
  src: "../fonts/Roboto-Bold.ttf";
  font-weight: bold;
}

html {
  font-size: 10px;
}

body {
  box-sizing: border-box;
  font-family: "Roboto", serif;
  font-size: 1.8rem;
  line-height: 1.8;
  color: #111;
  background-color: #f9f9f9;
  -webkit-text-size-adjust: none;
}
div,
p {
  margin: 0;
}
button {
  border: none;
  outline: none;
  background-color: transparent;
  padding: 0;
  cursor: pointer;
}
main {
  margin: -0.5rem auto 0;
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  justify-content: center;
}

.cards {
  max-width: 87rem;
}

.card-wrapper {
  display: flex;
  width: 100%;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-between;
}

.card {
  position: relative;
  border-radius: 1rem;
  background-color: #fff;
  overflow: hidden;
  padding-bottom: 1rem;
  margin-top: 3.5rem;
}

.img-wrapper {
  width: 27rem;
}
.card-img {
  width: 100%;
  height: auto;
}
.card-props {
  display: inline-block;
  position: absolute;
  left: 1rem;
  top: 1.3rem;
  color: #fff;
  background-color: #f03b8c;
  border-radius: 0.5rem;
  font-weight: medium;
  font-size: 1.2rem;
  line-height: 1.9;
  padding: 0 1rem;
}

.comfort {
  left: 9.5rem;
}

.card-name,
.card-location,
.card-metro,
.card-timing {
  margin-left: 1.5rem;
}

.card-name {
  line-height: 1.1;
  font-weight: bold;
  margin-top: 0.6rem;
  margin-bottom: 1.6rem;
}

.card-metro {
  display: inline-block;
  position: relative;
  font-size: 1.6rem;
  margin-top: 0.7rem;
  margin-bottom: 0.7rem;
  padding-left: 2.3rem;
  padding-right: 1.8rem;
}

.card-metro span {
  color: #8f8f8f;
}

.card-metro::before {
  content: "";
  position: absolute;
  left: 0;
  margin-top: 0.7rem;
  width: 1.6rem;
  height: 1.1rem;
  background: url(../img/metro.svg) left center/contain no-repeat;
}

.card-metro::after {
  content: "";
  position: absolute;
  right: 0;
  margin-top: 0.7rem;
  width: 1rem;
  height: 1.7rem;
  background: url(../img/man.svg) left center/contain no-repeat;
}
.card-location {
  color: #8f8f8f;
}

.button-wrapper {
  width: 100%;
  background-color: #fff;
  margin-top: 2.5rem;
  border-radius: 1rem;
  padding: 1.9rem 0;
}

.button-wrapper label {
  display: block;
  text-align: center;
  font-weight: bold;
  margin-top: 1rem;
}

.button-wrapper label:hover {
  color: #e5e90a;
  cursor: pointer;
}
.show-more {
  width: 4rem;
  height: 4rem;
  background-color: #f03b8c;
  border-radius: 50%;
  margin: 0 calc(50% - 2rem);
}

.vertical {
  position: relative;
  width: 0.3rem;
  height: 3rem;
  top: 0.1rem;
  left: 1.85rem;
  background-color: #fff;
}

.horizontal {
  position: relative;
  width: 3rem;
  height: 0.3rem;
  top: -1.5rem;
  left: 0.5rem;
  background-color: #fff;
}

.filters {
  display: flex;
  flex-direction: column;
  width: 27rem;
  margin-top: 5.1rem;
  margin-left: 3rem;
}
.filter label {
  color: #afafaf;
}
.distance-wrapper {
  display: flex;
}

.filter-name,
.filter-name__active {
  position: relative;
  width: 100%;
  line-height: 1.1;
  font-weight: bold;
  margin-bottom: 2.4rem;
}

.filter-name::after,
.filter-name__active::after {
  content: "";
  position: absolute;
  right: 0;
  transform: translateY(50%) rotate(0deg);
  width: 1.3rem;
  height: 0.8rem;
  background: url("../img/arrow.svg") right center/1.3rem 0.8rem no-repeat;
  transition: 0.3s;
}

.filter-name__active::after {
  transform: translateY(50%) rotate(180deg);
  transition: 0.3s;
}

.filter-distance {
  display: flex;
  border: 0.1rem solid #5f5f5f50;
  height: 5rem;
  width: 25%;
  justify-content: center;
  align-items: center;
  color: #afafaf;
  cursor: pointer;
}
.filter-distance:first-child {
  border-radius: 0.2rem 0 0 0.2rem;
}
.filter-distance:last-child {
  border-radius: 0 0.2rem 0.2rem 0;
}

.filter-distance__last {
  width: 100%;
  margin-top: 1rem;
  margin-bottom: 4.5rem;
  border-radius: 0.2rem;
}

.active {
  border-color: #f03b8c;
  background-color: #f03b8c;
  color: #fff;
}

.period-wrapper {
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  margin-top: -0.8rem;
  margin-bottom: 4.3rem;
}

input[name="period"] {
  position: absolute;
  z-index: -1;
  opacity: 0;
  margin: 1rem 0 0 0.7rem;
}

input[name="period"] + label {
  position: relative;
  padding: 0 0 0 2.4rem;
  cursor: pointer;
  margin-top: 0.8rem;
}

input[name="period"] + label::before {
  content: "";
  position: absolute;
  top: 0.6rem;
  left: 0;
  width: 1.6rem;
  height: 1.6rem;
  border: 0.1rem solid #f03b8c;
  box-sizing: border-box;
  border-radius: 50%;
  background: #fff;
}

input[name="period"]:checked + label::before {
  border-width: 5px;
}

input[name="period"]:checked + label {
  color: #f03b8c;
}

.opt-wrapper {
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  margin-top: -1.1rem;
  margin-bottom: 0.3rem;
}

input[name="opt"] {
  position: absolute;
  z-index: -1;
  opacity: 0;
  margin: 1rem 0 0 2rem;
}

input[name="opt"] + label {
  position: relative;
  padding: 0 0 0 2.2rem;
  cursor: pointer;
  margin-top: 1.1rem;
}

input[name="opt"] + label::before {
  content: "";
  position: absolute;
  top: 0.7rem;
  left: 0;
  width: 1.6rem;
  height: 1.6rem;
  box-sizing: border-box;
  border-radius: 0.3rem;
  background: transparent;
  border: 1px solid #f03b8c;
}

input[name="opt"]:checked + label::before {
  background: url(../img/opt-bg.svg) left center/contain no-repeat #f03b8c;
}

input[name="opt"]:checked + label {
  color: #f03b8c;
}

.hidden {
  display: none;
}

.more-opt {
  color: #f03b8c;
  font-size: 1.5rem;
  line-height: 1.9;
  position: relative;
  margin-bottom: 2.7rem;
  cursor: pointer;
}
.more-opt:hover {
  color: #e5e90a;
}

input[name="services"] {
  position: absolute;
  z-index: -1;
  opacity: 0;
  margin: 1rem 0 0 2rem;
}

input[name="services"] + label {
  position: relative;
  padding: 0 0 0 4.8rem;
  cursor: pointer;
}

input[name="services"] + label::before {
  content: "";
  position: absolute;
  top: 0.1rem;
  left: 0;
  width: 4rem;
  height: 2rem;
  border-radius: 1.3rem;
  background: #cdd1da;
  box-shadow: inset 0 0.2rem 0.3rem rgba(0, 0, 0, 0.2);
  transition: 0.2s;
}

input[name="services"] + label:after {
  content: "";
  position: absolute;
  top: 0.3rem;
  left: 0.2rem;
  width: 1.6rem;
  height: 1.6rem;
  border-radius: 1rem;
  background: #fff;
  transition: 0.2s;
}

input[name="services"]:checked + label::before {
  background: #f03b8c;
}

input[name="services"]:checked + label:after {
  left: 2.1rem;
}

input[name="services"]:focus + label::before {
  box-shadow: 0 0 0 0.3rem rgba(255, 255, 0, 0.7);
}

.apply,
.reset {
  width: 27rem;
  height: 5rem;
  text-align: center;
  border-radius: 0.2rem;
  margin-top: 3rem;
  font-size: inherit;
  font-family: "Roboto";
}

.apply {
  color: #fff;
  font-weight: medium;
  background-color: #f03b8c;
}

.reset {
  color: #5f5f5f;
  line-height: 1.9;
  border: 2px solid #5f5f5f50;
  background: url(../img/reset-bg.svg) 22rem center no-repeat;
}

@media only screen and (min-width: 1921px) {
  html {
    font-size: 15px;
  }
}

@media only screen and (max-width: 1024px) {
  main {
    flex-direction: column;
    align-items: center;
  }

  .filters {
    width: 87rem;
    margin-left: 0;
    order: -1;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-between;
  }

  .filter {
    width: 30%;
  }

  .services,
  .apply,
  .reset {
    width: 30%;
    margin-top: 0;
    align-self: center;
  }
}

@media only screen and (max-width: 768px) {
  .card-wrapper {
    justify-content: space-evenly;
  }

  .filters {
    width: 80%;
  }

  .filter {
    width: 40%;
  }
  .services,
  .apply,
  .reset {
    width: 40%;
    margin-top: 0;
    align-self: center;
  }
  .reset {
    background: url(../img/reset-bg.svg) 90% center no-repeat;
  }
}

@media only screen and (max-width: 426px) {
  html {
    font-size: 7px;
  }

  .filter,
  .services,
  .apply,
  .reset {
    width: 100%;
  }

  .apply,
  .reset {
    margin-top: 1rem;
  }
  .reset {
    background: url(../img/reset-bg.svg) 80% center no-repeat;
  }
}
